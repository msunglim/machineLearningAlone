# -*- coding: utf-8 -*-
"""machineLearning13.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kH-bNg_MhNo9TJe0cMGPFijm1mJUlqId
"""

import matplotlib.pyplot as plt #draw graph
import numpy as np #make array
from sklearn.cluster import KMeans #set n number of cluster. First, randomly group elements and get mean of them. Then group again with the mean and then get mean value of them again. Repeat this process until all clusters form propery.

!wget https://bit.ly/fruits_300_data -O fruits_300.npy
fruits = np.load('fruits_300.npy')
fruits_2d = fruits.reshape(-1, 100*100) #make the 3 dimensional arrray two dimensional array

# print(fruits_2d)
# print("22",fruits_2d[100])
# print("2d",fruits_2d[100:101])

km = KMeans(n_clusters=3, random_state=42)
km.fit(fruits_2d)
print(km.labels_)

print(np.unique(km.labels_, return_counts= True))

def draw_fruits(arr, ratio=1):
  n = len(arr)
  rows = int(np.ceil(n/10))



  cols = n if rows <2 else 10

  fig, axs = plt.subplots(rows, cols, figsize=(cols*ratio, rows*ratio), squeeze=False)

  for i in range(rows):
    for j in range(cols):
      if i*10 + j < n:
        axs[i,j].imshow(arr[i*10+j], cmap='gray_r')
      axs[i,j].axis('off')

  plt.show()

# draw_fruits(fruits[km.labels_ ==0])
# draw_fruits(fruits[km.labels_ ==1])
# draw_fruits(fruits[km.labels_ ==2])

draw_fruits(km.cluster_centers_.reshape(-1,100,100), ratio= 3)

print(km.transform(fruits_2d[100:101]))

print(km.predict(fruits_2d[100:101]))

draw_fruits(fruits[100:101])

print(km.n_iter_)

inertia = []
for k in range(2,7):
  km = KMeans(n_clusters= k, random_state =42)
  km.fit(fruits_2d)
  inertia.append(km.inertia_)


plt.plot(range(2,7), inertia)
plt.xlabel('k')
plt.ylabel('inertia')
plt.show()