# -*- coding: utf-8 -*-
"""MarketAndMachineLearning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XZU4bsSiSyOfN6Maz5NJSNMjCmagb5wq
"""



import matplotlib.pyplot as plt
from sklearn.neighbors import KNeighborsClassifier
# domi
bream_length = [25.4,26.3,26.5,29.0,29.0,29.7,29.7,30.0,30.7,30.9,31.0,31.0,31.5,32.0,32.0,33.0,33.5,33.5,34.0,34.0]
bream_weight= [430.3,450.0,460.0,490.0,450.0,500.0,475.0,500.0,500.0,540.0,600.0,600.0,610.0,615.0,610.0,650.0,675.0,685.0,620.0,680.0]

# binga
smelt_length =[9.8,10.5,10.6,11.0,11.2,11.3,11.5,11.8,11.9,12.0,12.2,12.4,13.0,15.0]
smelt_weight=[6.7,7.5,7.0,9.7,9.8,8.7,10.0,9.9,9.8,12.2,13.4,12.2,19.7,19.9]

plt.scatter(bream_length, bream_weight)
plt.scatter(smelt_length, smelt_weight)
plt.xlabel('length')
plt.ylabel('weight')

plt.show()

# --------------------
length = bream_length + smelt_length
weight = bream_weight+ smelt_weight

fish_data =[[l,w] for l, w in zip(length, weight)]
fish_target = [1]*len(bream_length) + [0]*len(smelt_length)
# ---------------------
kn = KNeighborsClassifier()

kn.fit(fish_data, fish_target)
# 1.0
kn.score(fish_data, fish_target)

kn.predict([[30, 500]])

kn49 = KNeighborsClassifier(n_neighbors = (len(bream_length)+len(smelt_length)))
kn49.fit(fish_data, fish_target)
# 0.58
kn49.score(fish_data, fish_target)

# kn49.predict([[35,700]])

# print(bream lenght/ fish lenght)